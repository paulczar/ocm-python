# coding: utf-8

"""
    clusters_mgmt

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Contact: ocm-feedback@redhat.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ocm_client
from ocm_client.models.inline_response20051 import InlineResponse20051  # noqa: E501
from ocm_client.rest import ApiException

class TestInlineResponse20051(unittest.TestCase):
    """InlineResponse20051 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InlineResponse20051
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ocm_client.models.inline_response20051.InlineResponse20051()  # noqa: E501
        if include_optional :
            return InlineResponse20051(
                items = [
                    ocm_client.models.version.Version(
                        kind = '0', 
                        id = '0', 
                        href = '0', 
                        gcp_marketplace_enabled = True, 
                        rosa_enabled = True, 
                        available_upgrades = [
                            '0'
                            ], 
                        channel_group = '0', 
                        default = True, 
                        enabled = True, 
                        end_of_life_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        hosted_control_plane_enabled = True, 
                        image_overrides = ocm_client.models.image_overrides.ImageOverrides(
                            kind = '0', 
                            id = '0', 
                            href = '0', 
                            aws = [
                                ocm_client.models.ami_override.AMIOverride(
                                    kind = '0', 
                                    id = '0', 
                                    href = '0', 
                                    ami = '0', 
                                    product = ocm_client.models.product.Product(
                                        kind = '0', 
                                        id = '0', 
                                        href = '0', 
                                        name = '0', ), 
                                    region = ocm_client.models.cloud_region.CloudRegion(
                                        kind = '0', 
                                        id = '0', 
                                        href = '0', 
                                        ccs_only = True, 
                                        kms_location_id = '0', 
                                        kms_location_name = '0', 
                                        cloud_provider = ocm_client.models.cloud_provider.CloudProvider(
                                            kind = '0', 
                                            id = '0', 
                                            href = '0', 
                                            display_name = '0', 
                                            name = '0', 
                                            regions = [
                                                ocm_client.models.cloud_region.CloudRegion(
                                                    kind = '0', 
                                                    id = '0', 
                                                    href = '0', 
                                                    ccs_only = True, 
                                                    kms_location_id = '0', 
                                                    kms_location_name = '0', 
                                                    display_name = '0', 
                                                    enabled = True, 
                                                    govcloud = True, 
                                                    name = '0', 
                                                    supports_hypershift = True, 
                                                    supports_multi_az = True, )
                                                ], ), 
                                        display_name = '0', 
                                        enabled = True, 
                                        govcloud = True, 
                                        name = '0', 
                                        supports_hypershift = True, 
                                        supports_multi_az = True, ), )
                                ], 
                            gcp = [
                                ocm_client.models.gcp_image_override.GCPImageOverride(
                                    kind = '0', 
                                    id = '0', 
                                    href = '0', 
                                    billing_model = ocm_client.models.billing_model_item.BillingModelItem(
                                        kind = '0', 
                                        id = '0', 
                                        href = '0', 
                                        billing_model_type = '0', 
                                        description = '0', 
                                        display_name = '0', 
                                        marketplace = '0', ), 
                                    image_id = '0', 
                                    project_id = '0', )
                                ], ), 
                        raw_id = '0', 
                        release_image = '0', )
                    ], 
                page = 56, 
                size = 56, 
                total = 56
            )
        else :
            return InlineResponse20051(
        )

    def testInlineResponse20051(self):
        """Test InlineResponse20051"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
