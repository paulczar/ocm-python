# coding: utf-8

"""
    clusters_mgmt

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Contact: ocm-feedback@redhat.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.flavour import Flavour  # noqa: E501
from openapi_client.rest import ApiException

class TestFlavour(unittest.TestCase):
    """Flavour unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Flavour
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.flavour.Flavour()  # noqa: E501
        if include_optional :
            return Flavour(
                kind = '0', 
                id = '0', 
                href = '0', 
                aws = openapi_client.models.aws_flavour.AWSFlavour(
                    compute_instance_type = '0', 
                    infra_instance_type = '0', 
                    infra_volume = openapi_client.models.aws_volume.AWSVolume(
                        iops = 56, 
                        size = 56, ), 
                    master_instance_type = '0', 
                    master_volume = openapi_client.models.aws_volume.AWSVolume(
                        iops = 56, 
                        size = 56, ), 
                    worker_volume = openapi_client.models.aws_volume.AWSVolume(
                        iops = 56, 
                        size = 56, ), ), 
                gcp = openapi_client.models.gcp_flavour.GCPFlavour(
                    compute_instance_type = '0', 
                    infra_instance_type = '0', 
                    infra_volume = openapi_client.models.gcp_volume.GCPVolume(
                        size = 56, ), 
                    master_instance_type = '0', 
                    master_volume = openapi_client.models.gcp_volume.GCPVolume(
                        size = 56, ), 
                    worker_volume = openapi_client.models.gcp_volume.GCPVolume(
                        size = 56, ), ), 
                name = '0', 
                network = openapi_client.models.network.Network(
                    host_prefix = 56, 
                    machine_cidr = '0', 
                    pod_cidr = '0', 
                    service_cidr = '0', 
                    type = '0', ), 
                nodes = openapi_client.models.flavour_nodes.FlavourNodes(
                    master = 56, )
            )
        else :
            return Flavour(
        )

    def testFlavour(self):
        """Test Flavour"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
