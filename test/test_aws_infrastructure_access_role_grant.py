# coding: utf-8

"""
    clusters_mgmt

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Contact: ocm-feedback@redhat.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.aws_infrastructure_access_role_grant import AWSInfrastructureAccessRoleGrant  # noqa: E501
from openapi_client.rest import ApiException

class TestAWSInfrastructureAccessRoleGrant(unittest.TestCase):
    """AWSInfrastructureAccessRoleGrant unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AWSInfrastructureAccessRoleGrant
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.aws_infrastructure_access_role_grant.AWSInfrastructureAccessRoleGrant()  # noqa: E501
        if include_optional :
            return AWSInfrastructureAccessRoleGrant(
                kind = '0', 
                id = '0', 
                href = '0', 
                console_url = '0', 
                role = openapi_client.models.aws_infrastructure_access_role.AWSInfrastructureAccessRole(
                    kind = '0', 
                    id = '0', 
                    href = '0', 
                    description = '0', 
                    display_name = '0', 
                    state = 'invalid', ), 
                state = 'deleting', 
                state_description = '0', 
                user_arn = '0'
            )
        else :
            return AWSInfrastructureAccessRoleGrant(
        )

    def testAWSInfrastructureAccessRoleGrant(self):
        """Test AWSInfrastructureAccessRoleGrant"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
