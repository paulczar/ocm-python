# coding: utf-8

"""
    clusters_mgmt

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Contact: ocm-feedback@redhat.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.add_on_config import AddOnConfig  # noqa: E501
from openapi_client.rest import ApiException

class TestAddOnConfig(unittest.TestCase):
    """AddOnConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AddOnConfig
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.add_on_config.AddOnConfig()  # noqa: E501
        if include_optional :
            return AddOnConfig(
                kind = '0', 
                id = '0', 
                href = '0', 
                add_on_environment_variables = [
                    openapi_client.models.add_on_environment_variable.AddOnEnvironmentVariable(
                        kind = '0', 
                        id = '0', 
                        href = '0', 
                        name = '0', 
                        value = '0', )
                    ], 
                secret_propagations = [
                    openapi_client.models.add_on_secret_propagation.AddOnSecretPropagation(
                        id = '0', 
                        destination_secret = '0', 
                        enabled = True, 
                        source_secret = '0', )
                    ]
            )
        else :
            return AddOnConfig(
        )

    def testAddOnConfig(self):
        """Test AddOnConfig"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
