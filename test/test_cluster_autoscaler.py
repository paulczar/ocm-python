# coding: utf-8

"""
    clusters_mgmt

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Contact: ocm-feedback@redhat.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ocm_client
from ocm_client.models.cluster_autoscaler import ClusterAutoscaler  # noqa: E501
from ocm_client.rest import ApiException

class TestClusterAutoscaler(unittest.TestCase):
    """ClusterAutoscaler unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ClusterAutoscaler
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ocm_client.models.cluster_autoscaler.ClusterAutoscaler()  # noqa: E501
        if include_optional :
            return ClusterAutoscaler(
                kind = '0', 
                id = '0', 
                href = '0', 
                balance_similar_node_groups = True, 
                balancing_ignored_labels = [
                    '0'
                    ], 
                ignore_daemonsets_utilization = True, 
                log_verbosity = 56, 
                max_node_provision_time = '0', 
                max_pod_grace_period = 56, 
                pod_priority_threshold = 56, 
                resource_limits = ocm_client.models.autoscaler_resource_limits.AutoscalerResourceLimits(
                    gpus = [
                        ocm_client.models.autoscaler_resource_limits_gpu_limit.AutoscalerResourceLimitsGPULimit(
                            range = ocm_client.models.resource_range.ResourceRange(
                                max = 56, 
                                min = 56, ), 
                            type = '0', )
                        ], 
                    cores = ocm_client.models.resource_range.ResourceRange(
                        max = 56, 
                        min = 56, ), 
                    max_nodes_total = 56, 
                    memory = ocm_client.models.resource_range.ResourceRange(
                        max = 56, 
                        min = 56, ), ), 
                scale_down = ocm_client.models.autoscaler_scale_down_config.AutoscalerScaleDownConfig(
                    delay_after_add = '0', 
                    delay_after_delete = '0', 
                    delay_after_failure = '0', 
                    enabled = True, 
                    unneeded_time = '0', 
                    utilization_threshold = '0', ), 
                skip_nodes_with_local_storage = True
            )
        else :
            return ClusterAutoscaler(
        )

    def testClusterAutoscaler(self):
        """Test ClusterAutoscaler"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
